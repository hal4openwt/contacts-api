swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Contacts API"
host: "localhost:8080"
basePath: "/api/v1"
tags:
- name: "contacts"
  description: "Contacts"
- name: "skills"
  description: "Contacts' skills"
schemes:
#- "https"
- "http"
paths:
  /contacts:
    get:
      tags:
      - "contacts"
      summary: "List contacts"
      description: ""
      operationId: "listContacts"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            items:
              $ref: '#/definitions/Contact'
    post:
      tags:
      - "contacts"
      summary: "Add a contact"
      description: ""
      operationId: "addContact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Contact object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        405:
          description: "Invalid input"
  /contacts/{contactId}:
    get:
      tags:
      - "contacts"
      summary: "Find contact by ID"
      description: "Returns a single contact"
      operationId: "getContactById"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Contact"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
    put:
      tags:
      - "contacts"
      summary: "Update an existing contact"
      description: ""
      operationId: "updateContact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Contact object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
        405:
          description: "Validation exception"

    delete:
      tags:
      - "contacts"
      summary: "Deletes a contact"
      description: ""
      operationId: "deleteContact"
      produces:
      - "application/json"
      parameters:
      # - name: "api_key"
      #   in: "header"
      #   required: false
      #   type: "string"
      - name: "contactId"
        in: "path"
        description: "Contact id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
  /contacts/{contactId}/addSkill:
    post:
      tags:
      - "contacts"
      summary: "Adds a skill to a contact"
      description: ""
      operationId: "addSkillToContact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of contact to update"
        required: true
        type: "integer"
        format: "int64"
      - name: "skills"
        in: "body"
        description: "ID of skill to add"
        required: true
        schema:
          $ref: '#/definitions/Skill'
      responses:
        200:
          description: "Skill added to contact"
        422:
          description: "Skill ID not found"
  /skills:
    get:
      tags:
      - "skills"
      summary: "List all skills"
      description: ""
      operationId: "listSkills"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: array
            items:
              $ref: '#/definitions/Skill'
    post:
      tags:
      - "skills"
      summary: "Add a skill"
      description: ""
      operationId: "addSkill"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Skill object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Skill"
      responses:
        405:
          description: "Invalid input"
  /skills/{skillId}:
    get:
      tags:
      - "skills"
      summary: "Find skill by ID"
      description: "Returns a single skill"
      operationId: "getSkillById"
      produces:
      - "application/json"
      parameters:
      - name: "skillId"
        in: "path"
        description: "ID of skill to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Skill"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Contact not found"
    put:
      tags:
      - "skills"
      summary: "Update an existing skill"
      description: ""
      operationId: "updateSkill"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "skillId"
        in: "path"
        description: "ID of skill to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Skill that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Skill"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Skill not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "skills"
      summary: "Deletes a skill"
      description: ""
      operationId: "deleteSkill"
      produces:
      - "application/json"
      parameters:
      - name: "skillId"
        in: "path"
        description: "Skill ID to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Skill not found"
definitions:
  Contact:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      lastName:
        type: "string"
      fullName:
        type: "string"
      address:
        type: "string"
      email:
        type: "string"
        format: "email"
      mobilePhoneNumber:
        type: "string"
        pattern: '^(\+|00)[\d\-\.\/ ]+$'
      skills:
        type: array
        items:
          $ref: '#/definitions/Skill'  
    required:
    - firstName
    - lastName
    - fullName
    - address
    - email
    - mobilePhoneNumber
    example:
      id: 1
      firstName: 'John'
      lastName: 'Doe'
      fullName: 'John Doe'
      address: 'London'
      email: 'john.doe@example.com'
      mobilePhoneNumber: '+44 7123456789'
  Skill:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      level:
        type: "string"
        enum: 
        - "very good"
        - "good"
        - "average"
        - "poor"
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
    required:
    - name
    - level
    example:
      name: 'C++'
      level: 'good'
          